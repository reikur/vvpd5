""" VVPD5. Learning how to write a correct documentation."""
import math
import sys


def main() -> None:
    '''
    Main function.
        A function to run the program using other functions.

    Return value is None.
    '''
    
    menu()

def menu() -> None:
    '''
    Menu function.
        A menu function in which the user can choose a "start the program" or "exit it".

    Arguments: 
        inp - the user choice. Can be either "1" or "0".

    Return value is None.

    Example:
        user input: 0. Program, in turn, closes.
        user input: 1. Runing other function "user_input_length".  
    '''

    while True:
        inp = input('\nEnter "1" to continue.'
              '\nOr if you want to exit enter "0".\n')
        if inp == '1':
            user_input_length()
        elif inp == '0':
            sys.exit()


def user_input_length() -> None:
    '''
    User input length function.
        A function of enter by the user a length of massive with numbers that will be analyzed to generate lucky numbers.

    Arguments:
        count - It is length of massive with numbers that will be analyzed to generate lucky numbers.

    Return value is None.

    Exeptions:
        ValueError

    Example:
        user input: 10. Length of massive is 10: [1,2,3,4,5,6,7,8,9,10]
        user input: 0. It's a choice for back in menu.
        user input: aadaSAS. It is raises Value Error, the program dont can work with string.
    '''

    print('\nA lucky number in number theory is a '
        'natural number from a set generated by a "sieve",\n'
        'similar to the sieve of Eratosthenes, which generates prime numbers.\n')
    while True:
        try:
            count = int(input('Enter "0" for back in main menu.\n'
                              'Enter the lenght of the list of natural numbers: \n'))
            if count == 0:
                break
            elif count < 0:
                print("\nNegative numbers are not supported.")
                raise ValueError
            elif count in [1, 2, 3, 4, 5, 6]:
                print('\nEnter the length is bigger because the entered number is so small \
                      to be analysed to generate lucky numbers.')
                raise ValueError
            print(find_lucky_numbers(count))
        except ValueError:
            print('Please enter the correct number.\n')

def find_lucky_numbers(count) -> str:
    '''
    Generate lucky numbers function.
        A function in which it creates massive with numbers that will be analyzed to generate lucky numbers. After creating 
    the massive the program uses theory of Eratosphenes to analyze list of numbers. After analysis, the program is generating 
    the list of lucky numbers.

    Arguments:
        step - this is a value of step using in formule to generate lucky numbers.
        mas - this is a list of numbers at the start and list of lucky numbers at the finish.
        length - this is a length of massive
    
    Return value is string of list of lucky numbers that will be printed.
    '''

    step = 2
    mas = [0] * count
    for i in range(count):
        mas[i] = i + 1
    i = 1
    while step - 1 < len(mas):
        length = len(mas) - math.ceil(len(mas) / step)
        for j in range(step - 1, length + 1, step - 1):
            del mas[j]
        step = mas[i]
        i += 1
    return f'\nThe resulting lucky numbers: \n {mas}\n'\
           f'\nThe biggest lucky number: {mas[-1]}'\
           f'\nThe smallest lucky number: {mas[0]}\n'


main()
